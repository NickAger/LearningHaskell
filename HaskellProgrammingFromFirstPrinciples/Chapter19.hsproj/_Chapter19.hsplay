-- Haskell Playground 1.0
import Control.Monad

f' 9001
g' 9001

(f' <> g') 9001
(y <> z) 9

let f = M.fromList [('a', 1)]
let g = M.fromList [('b', 2)]

f <> g
mappend f g
f `mappend` g
M.fromList [('a', 1)]


-- note that same key is used here ie 'a'
-- nothing to do with function application of (<>)
-- (I originally though that "f <> g" was somehow different
-- to direct application of "<>" before I realised that the keys
-- are different in "f <> g" eg 'a' and 'b'
Data.Map.fromList [('a', 1)] <> Data.Map.fromList [('a', 2)]

Data.Map.fromList [('a', 1)] <> Data.Map.fromList [('b', 2)]

--

replicateM 2 [1, 3]
replicate 2 [1, 3]