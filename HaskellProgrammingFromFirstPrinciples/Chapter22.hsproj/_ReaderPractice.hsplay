-- Haskell Playground 1.0
import Data.Bifunctor

lookup 3 $ zip x y

xs
ys
zs


let f (f1, f2) n = (f1 n, f2 n)
f ((+4), (+3)) 2 

x1
x2
x3 3


fromMaybe 0 xs
fromMaybe 0 zs

main

[x, y]

(,) <$> xs <*> ys

sequA 3

foldr (&&) True $ sequA 3

s'


